Family EnvType = {

    Property Type ResourceStatePropT = Record [unit : string; total : float; available : float; used : float; ];
    Port Type PartPortT = {

    }
    Port Type NetworkPortT = {

    }
    Port Type ArchPortT = {

        Property isArchEnabled : boolean <<  default : boolean = true; >> ;

    }
    Port Type ContainmentPortT = {

    }
    Component Type ArchElementT = {

        Property isArchEnabled : boolean <<  default : boolean = true; >> ;

    }
    Component Type NodeT = {

        Property cpuOverall : ResourceStatePropT;

        Property memoryMain : ResourceStatePropT;

        Property storageLocal : ResourceStatePropT;

        Property socketPool : ResourceStatePropT;

        Property batteryOverall : ResourceStatePropT;

    }
    Role Type ArchRoleT = {

        Property isArchEnabled : boolean <<  default : boolean = true; >> ;

    }
    Role Type NetworkRoleT = {

    }
    Role Type PartRoleT = {

    }
    Role Type ContainerRoleT = {

    }
    Connector Type MappingT = {

    }
    Connector Type EdgeT = {

        Property bandwidthAvg : ResourceStatePropT;

        Property capacity : ResourceStatePropT;

    }
    Connector Type ArchConnT = {

        Property isArchEnabled : boolean <<  default : boolean = true; >> ;

    }
}

Family RubisFam extends EnvType with {

    Port Type HttpPortT extends ArchPortT with {

    }
    Port Type ProxyForwardPortT extends ArchPortT with {

    }
    Port Type HttpReqPortT extends ArchPortT with {

    }
    Component Type LoadBalancerT extends ArchElementT with {

        Property deploymentLocation : string <<  default : string = "localhost"; >> ;

        Property dimmer : float <<  default : float = 1.0; >> ;

        Property arrivalRate : float <<  default : float = 0.0; >> ;

        Property basicResponseTime : float <<  default : float = 0.0; >> ;

        Property optResponseTime : float <<  default : float = 0.0; >> ;

        Property basicThroughput : float <<  default : float = 0.0; >> ;

        Property optThroughput : float <<  default : float = 0.0; >> ;

        Property basicServiceTime : float <<  default : float = 0.0; >> ;

        Property optServiceTime : float <<  default : float = 0.0; >> ;

    }
    Component Type ServerT extends ArchElementT with {
        Port http0 : HttpPortT = new HttpPortT extended with {

            Property isArchEnabled = true;

        }

        Property deploymentLocation : string <<  default : string = "localhost"; >> ;

        Property load : float <<  default : float = 0.0; >> ;

        Property index : int;

        Property isActive : boolean <<  default : boolean = true; >> ;

        Property expectedActivationTime : int <<  default : int = 0; >> ;

        Property reqServiceRate : float <<  default : float = 0.0; >> ;

        Property byteServiceRate : float <<  default : float = 0.0; >> ;

        Property cost : float <<  default : float = 1.0; >> ;

    }
    Role Type ReceiverRoleT extends ArchRoleT with {

    }
    Role Type RequestorRoleT extends ArchRoleT with {

    }
    Connector Type ProxyConnT extends ArchConnT with {
        Role req : RequestorRoleT = new RequestorRoleT extended with {

        }
        Role rec : ReceiverRoleT = new ReceiverRoleT extended with {

        }

    }

    Property DIMMER_LEVELS : int <<  default : int = 5; >> ;

    Property DIMMER_MARGIN : float <<  default : float = 0.1; >> ;

    Property ADD_SERVER_LATENCY_SEC : int <<  default : int = 60; >> ;

    Property THREADS_PER_SERVER : int <<  default : int = 100; >> ;

    Property MAX_ARRIVAL_CAPACITY : float;

    Property RT_THRESHOLD : float;

    Property MIN_RESPTIME : float;

    Property MAX_RESPTIME : float <<  default : float = 2; >> ;

    Property MIN_UTIL : float;

    Property MAX_UTIL : float <<  default : float = 1; >> ;

    Property MAX_FIDELITY_LEVEL : int;

    Property THRESHOLD_FIDELITY : int;

    Property THRESHOLD_COST : float;
}

System RubisSys : RubisFam = new RubisFam extended with {

    Component server1 : ServerT = new ServerT extended with {
        Port http0 : HttpPortT = new HttpPortT extended with {

        }

        Property deploymentLocation = "127.0.0.1";

        Property index = 1;

        Property load = 0.0;

        Property isActive = true;

        Property expectedActivationTime = 0;

        Property reqServiceRate = 0.0;

        Property byteServiceRate = 0.0;

        Property cost = 1.0;

        Property isArchEnabled = true;

    }
    Component server2 : ServerT = new ServerT extended with {
        Port http0 : HttpPortT = new HttpPortT extended with {

        }

        Property deploymentLocation = "10.0.0.98";

        Property index = 2;

        Property load = 0.0;

        Property isActive = true;

        Property expectedActivationTime = 0;

        Property reqServiceRate = 0.0;

        Property byteServiceRate = 0.0;

        Property cost = 1.0;

        Property isArchEnabled = true;

    }
    Component server3 : ServerT = new ServerT extended with {
        Port http0 : HttpPortT = new HttpPortT extended with {

        }

        Property deploymentLocation = "10.0.0.183";

        Property index = 3;

        Property isArchEnabled = true;

        Property load = 0.0;

        Property isActive = true;

        Property expectedActivationTime = 0;

        Property reqServiceRate = 0.0;

        Property byteServiceRate = 0.0;

        Property cost = 1.0;

    }
    Component LB0 : LoadBalancerT = new LoadBalancerT extended with {
        Port fwd1 : ProxyForwardPortT = new ProxyForwardPortT extended with {

            Property isArchEnabled = true;

        }
        Port fwd2 : ProxyForwardPortT = new ProxyForwardPortT extended with {

            Property isArchEnabled = true;

        }
        Port fwd3 : ProxyForwardPortT = new ProxyForwardPortT extended with {

            Property isArchEnabled = true;

        }

        Property deploymentLocation = "127.0.0.1";

        Property isArchEnabled = true;

        Property basicServiceTime = 0.0024;

        Property optServiceTime = 0.03;

        Property dimmer = 1.0;

        Property arrivalRate = 0.0;

        Property basicResponseTime = 0.0;

        Property optResponseTime = 0.0;

        Property basicThroughput = 0.0;

        Property optThroughput = 0.0;

    }
    Connector proxyConn_1_0 : ProxyConnT = new ProxyConnT extended with {
        Role req : RequestorRoleT = new RequestorRoleT extended with {

            Property isArchEnabled = true;

        }
        Role rec : ReceiverRoleT = new ReceiverRoleT extended with {

            Property isArchEnabled = true;

        }

        Property isArchEnabled = true;

    }
    Connector proxyConn_2_0 : ProxyConnT = new ProxyConnT extended with {
        Role req : RequestorRoleT = new RequestorRoleT extended with {

            Property isArchEnabled = true;

        }
        Role rec : ReceiverRoleT = new ReceiverRoleT extended with {

            Property isArchEnabled = true;

        }

        Property isArchEnabled = true;

    }
    Connector proxyConn_3_0 : ProxyConnT = new ProxyConnT extended with {
        Role req : RequestorRoleT = new RequestorRoleT extended with {

            Property isArchEnabled = true;

        }
        Role rec : ReceiverRoleT = new ReceiverRoleT extended with {

            Property isArchEnabled = true;

        }

        Property isArchEnabled = true;

    }
    Attachment server1.http0 to proxyConn_1_0.rec;
    Attachment server2.http0 to proxyConn_2_0.rec;
    Attachment server3.http0 to proxyConn_3_0.rec;
    Attachment LB0.fwd1 to proxyConn_1_0.req;
    Attachment LB0.fwd2 to proxyConn_2_0.req;
    Attachment LB0.fwd3 to proxyConn_3_0.req;

    Property DIMMER_LEVELS = 5;

    Property MAX_ARRIVAL_CAPACITY = 22.458;

    Property RT_THRESHOLD = 0.75;

    Property MAX_RESPTIME = 2000.0;

    Property MAX_UTIL = 1;

    Property DIMMER_MARGIN = 0.1;

    Property ADD_SERVER_LATENCY_SEC = 60;

    Property THREADS_PER_SERVER = 100;
}

